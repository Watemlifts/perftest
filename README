INTRODUCTION
------------

This is a small python application that attempts to automate deployments of 
a large number of (temporary) virtual machines. It's main emphasis is 
setting up a large number of (OpenVPN) client computers for performance testing 
purposes. However, codebase is general purpose enough to be used for any 
purposes requiring a large number of temporary VMs.

Currently Amazon EC2 provider is supported, and the support for a "test" 
provider has been implemented but is broken atm due to architectural changes. 
Fixing it is trivial, though.


ARCHITECTURE
------------

Currently there are four different components:

1) Provider/poller/queuer thread(s)

This type of thread may create the temporary VMs. It may also poll for VMs that 
have reached a state where they can be configured. Whenever a VM becomes ready, 
it is placed into a queue, where configurer threads can find it.

There is usually only one of these threads.

2) Configurer threads

These threads take IPs of active VMs from the queue generated by provider 
thread(s) and run Fabric on them. Once they've configured the VM, they mark that 
IP as done and trigger removal from the queue.

There are usually many of these threads, as Fabric itself does not support 
multi-threaded operation.

3) Nain program

The main program (start.py) is responsible for reading configuration files and 
parsing command-line arguments, and for launching the appropriate number of 
threads.

4) Testsuite

Testsuite is the file where Fabric tasks are implemented.


DEPENDENCIES
------------

This application depends on the following external libraries and tools:

Boto (http://code.google.com/p/boto)

Python interface to Amazon Web Services. Not necessary if not using the Amazon 
EC2 provider/poller/queuer. Tested on version 1.9 on Ubuntu 11.04.

Fabric (http://fabfile.org)

Fabric is a Python (2.5 or higher) library and command-line tool for 
streamlining the use of SSH for application deployment or systems administration 
tasks. Tested on version 0.9.3 on Ubuntu 11.04.


LIMITATIONS
-----------

At the moment the configurer threads choke on input requests (as standard Fabric 
would). Also, Fabric output is even more confusing than normally, given that 
multiple threads write to the same terminal at the same time. There is no clean 
way to fix this, except by removing non-fatal logging and/or writing to logfiles 
instead of stdout.


USAGE
-----

If you're using the Amazon EC2 provider, you need to edit the ec2.conf.sample 
file to your liking and move it to ../ec2.conf. In addition, you need to use the 
appropriate command-line flags; to see them type

$ python start.py -h


TODO
----

- Clean up threading
- Reimplement full "test" provider
- Fix everything that can be found using "grep FIXME *"
